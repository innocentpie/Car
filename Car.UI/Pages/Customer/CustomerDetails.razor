@page "/customer/{id:guid}"
@using Car.Shared
@using Car.UI.Components
@using Car.UI.Services
@inject ICustomerService CustomerService
@inject NavigationManager NavigationManager

@if (Customer is null)
{
    <p>Loading..</p>
}
else
{
    <CustomerForm Customer="Customer" OnValidSubmit="UpdateAsync" ButtonText="Update Customer" />
    <button class="btn btn-warning" @onclick="DeleteAsync">Delete</button>
}

@code {
    
    [Parameter]
    public Guid Id { get; set; }
    
    private Customer? Customer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Customer = await CustomerService.GetCustomerAsync(Id);
    }

    private async Task DeleteAsync()
    {
        await CustomerService.DeleteCustomerAsync(Id);
        NavigationManager.NavigateTo("/customer/list");
    }

    private async Task UpdateAsync()
    {
        await CustomerService.UpdateCustomerAsync(Customer);
        NavigationManager.NavigateTo("/customer/list");
    }
}