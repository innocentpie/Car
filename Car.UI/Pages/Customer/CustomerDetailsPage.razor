@page "/customer/{id:guid}"

@using Car.Shared
@using Car.UI.Components
@using Car.UI.Services
@inject ICustomerService CustomerService
@inject NavigationManager NavigationManager

<h3>Customer Details</h3>

@if (Customer is null)
{
	<p>Loading...</p>
}
else
{
	<div class="container-fluid p-0">
		<div class="card p-3">
			<CustomerForm Customer="Customer.Customer.Properties" ButtonText="Update" OnValidSubmit="UpdateAsync" />
			<button type="button" class="mt-1 w-100 btn btn-danger" @onclick="DeleteAsync">Delete</button>
		</div>
		<div class="card p-3 mt-2">
			<h3>Works</h3>
			<WorkList Works="Customer.Works" EnableSearch="true" CustomerIncluded="false">
				<WorkSelectedButtonTemplate>
					<a href="/work/@context.Work.Id" class="btn btn-primary">Details</a>
				</WorkSelectedButtonTemplate>
			</WorkList>
		</div>
	</div>
}

@code {

	[Parameter]
	public Guid Id { get; set; }

	private CustomerGetDTO? Customer { get; set; }


	protected override async Task OnInitializedAsync()
	{
		Customer = await CustomerService.GetCustomerAsync(Id, includeWorks: true);
	}

	private async Task DeleteAsync()
	{
		await CustomerService.DeleteCustomerAsync(Id);
		NavigationManager.NavigateTo("/customer/list");
	}

	private async Task UpdateAsync()
	{
		await CustomerService.UpdateCustomerAsync(Customer.Customer);
		NavigationManager.NavigateTo("/customer/list");
	}
}