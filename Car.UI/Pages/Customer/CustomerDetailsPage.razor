@page "/customer/{id:guid}"

@using Car.Shared
@using Car.UI.Components
@using Car.UI.Services
@inject ICustomerService CustomerService
@inject NavigationManager NavigationManager

<ConfirmDialog @ref="dialog" />

<h3>Customer Details</h3>

@if (Customer is null)
{
	<p>Loading..</p>
}
else
{
	<CustomerForm Customer="Customer.Properties" ButtonText="Update" OnValidSubmit="UpdateAsync" />
	<Button Type="ButtonType.Button" Color="ButtonColor.Danger" Class="mt-1" @onclick="DeleteAsync">Delete</Button>
}

@code {

	[Parameter]
	public Guid Id { get; set; }

	private CustomerGetUpdateDTO? Customer { get; set; }

	private ConfirmDialog dialog;

	protected override async Task OnInitializedAsync()
	{
		Customer = await CustomerService.GetCustomerAsync(Id);
	}

	private async Task DeleteAsync()
	{
		var confirmation = await dialog.ShowAsync(
			title: "Are you sure you want to delete this customer?",
			message1: "This will delete the customer. Once deleted can not be recovered.",
			message2: "Do you want to proceed?");

		if (confirmation)
		{
			// do something
			await CustomerService.DeleteCustomerAsync(Id);
			NavigationManager.NavigateTo("/customer/list");
		}
	}

	private async Task UpdateAsync()
	{
		await CustomerService.UpdateCustomerAsync(Customer);
		NavigationManager.NavigateTo("/customer/list");
	}
}