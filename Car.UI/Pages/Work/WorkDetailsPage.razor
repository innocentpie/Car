@page "/work/{id:guid}"

@using Car.Shared
@using Car.UI.Components
@using Car.UI.Services
@inject IWorkService WorkService
@inject NavigationManager NavigationManager


<h3>Work Details</h3>

@if (Work is null)
{
	<p>Loading...</p>
}
else
{
	<div class="container-fluid p-0">
		<div class="row">
			<div class="col card p-3 mr-2">
				<div class="card-header bg-transparent">
					<h4>Work</h4>
				</div>
				<div class="card-body">
					<WorkForm Work="Work.Work.Properties" SelectedCustomer="Work.Customer.Customer" OnValidSubmit="UpdateAsync" ButtonText="Update" />
					<button class="mt-1 w-100 btn btn-danger" @onclick="DeleteAsync">Delete</button>
				</div>
			</div>
		</div>
	</div>
}


@code {
	[Parameter]
	public Guid Id { get; set; }

	private WorkGetDTO Work { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Work = await WorkService.GetWorkAsync(Id, includeCustomer: true);
	}

	private async Task DeleteAsync()
	{
		await WorkService.DeleteWorkAsync(Id);
		NavigationManager.NavigateTo("/work/list");
	}


	private async Task UpdateAsync()
	{
		await WorkService.UpdateWorkAsync(Work.Work);
		NavigationManager.NavigateTo("/work/list");
	}
}
